// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Client {
  id                String    @id @default(uuid())
  name              String
  email             String    @unique
  phone             String?
  incidentDate      DateTime?
  location          String?
  injuryDetails     String?
  medicalExpenses   Decimal? // Prisma recommends Decimal for monetary values
  insuranceCompany  String?
  lawyerNotes       String?

  // âœ… New fields clearly added for tailored task selection:
  caseType          String // e.g., "MVA", "Fall", "Product Liability"
  verbalQuality     String // e.g., "Good", "Bad", "Zero"

  onboardedAt       DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  documents         Document[] // Relation to Document model
  tasks             Task[]     // Relation to Task model
}

model Document {
  id            String   @id @default(uuid())
  clientId      String   // Foreign key
  documentType  String   // e.g., Demand Letter, Representation Letter
  fileUrl       String   // path or link to stored PDF
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  client        Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@index([clientId]) // Add index for performance on foreign key
}

// Task Management Model
model Task {
  id            String   @id @default(uuid())
  clientId      String   // Foreign key
  description   String
  dueDate       DateTime?
  status        String   @default("Pending") // Pending, In Progress, Completed, Overdue
  notes         String?  // Optional field for task-specific notes

  // Automation Fields
  automationType    String?  // e.g., EMAIL_DRAFT, CHATGPT_SUGGESTION, DOC_GENERATION
  requiresDocs      Boolean? // Does the automation need specific documents?
  automationConfig  String?  // JSON string or specific config (e.g., template name)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  client        Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@index([clientId]) // Index for faster task lookups by client
} 